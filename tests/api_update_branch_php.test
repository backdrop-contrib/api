<?php
// $Id$

include_once './'. drupal_get_path('module', 'api') .'/tests/api_test_case.php';

class apiUpdateBranchPhp extends ApiTestCase {
  function getInfo() {
    return array(
      'name' => t('api_update_branch_php()'),
      'description' => t('Test the api_update_branch_php() function.'),
      'group' => 'API Module',
    );
  }
  
  function testApiUpdateBranchPhp() {
    // Make sure we have the right number of doc objects.
    $branch = $this->getBranch();
    $count = db_result(db_query("SELECT count(*) FROM {api_documentation} WHERE branch_id = %d", $branch->branch_id));
    $this->assertEqual($count, 8, 'Found ' . $count . ' documentation objects.');

    // Check sample.php
    $object = api_filename_load('sample.php', $branch);
    $this->assertEqual($object->summary, 'A sample file.', t('sample.php has summary %summary.', array('%summary' => $object->summary)));

    // Check sample_function()
    $object = api_object_load('sample_function', $branch, 'function', 'sample.php');
    $this->assertEqual($object->summary, 'A sample function.', t('sample_function() has summary %summary.', array('%summary' => $object->summary)));

    // Check multi-paragraph @param
    $this->assertTrue(strpos($object->parameters, 'A second paragraph about') !== FALSE, t('sample_function() parameters contains second paragraph.'));

    // Check $sample_global
    $object = api_object_load('sample_global', $branch, 'global', 'sample.php');
    $this->assertEqual($object->summary, 'A sample global.', t('$sample_global has summary %summary.', array('%summary' => $object->summary)));

    // Check SAMPLE_CONSTANT
    $object = api_object_load('SAMPLE_CONSTANT', $branch, 'constant', 'sample.php');
    $this->assertEqual($object->summary, 'A sample constant.', t('SAMPLE_CONSTANT has summary %summary.', array('%summary' => $object->summary)));

    // Check group samples
    $object = api_object_load('samples', $branch, 'group', 'sample.php');
    $this->assertEqual($object->summary, 'A sample group.', t('Group samples has summary %summary.', array('%summary' => $object->summary)));

    // Check classes.php
    $object = api_filename_load('classes.php', $branch);
    $this->assertEqual($object->summary, 'Object-oriented tests.', t('classes.php has summary %summary.', array('%summary' => $object->summary)));

    // Check Sample class
    $object = api_object_load('Sample', $branch, 'class', 'classes.php');
    $this->assertEqual($object->summary, 'Sample class.', t('Sample has summary %summary.', array('%summary' => $object->summary)));

    // Check Sample::foo() method
    $object = api_object_load('Sample::foo', $branch, 'function', 'classes.php');
    $this->assertEqual($object->summary, 'Metasyntatic member function.', t('Sample::foo() has summary %summary.', array('%summary' => $object->summary)));
  }
}
