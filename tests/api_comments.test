<?php

/**
 * @file
 * Tests comment functionality for the API module.
 */

module_load_include('php', 'api', 'tests/api_test_case');

/**
 * Tests comment functionality.
 */
class ApiCommentsTestCase extends ApiWebPagesBaseTest {
  public static function getInfo() {
    return array(
      'name' => 'Comments',
      'description' => 'Tests comment functionality.',
      'group' => 'API module',
    );
  }

  function setUp() {
    $this->baseSetUp();

    // Set up a new super-user.
    $this->super_user = $this->drupalCreateUser(array(
      'access API reference',
      'administer API reference',
      'access content',
      'access administration pages',
      'administer blocks',
      'administer nodes',
      'access site reports',
      'access comments',
      'post comments',
      'skip comment approval',
    ));

    $this->drupalLogin($this->super_user);

    // Set up comment settings initially as hidden.
    $this->drupalPost('admin/config/development/api/comments', array(
        'comment' => 0,
      ), t('Save comment settings'));

    // Set up a regular files branch.
    $this->branch_info = $this->setUpBranchUI();

    // We don't need the PHP branch for this test, so for speed, remove it.
    $this->removePHPBranch();

    // Parse the code.
    $this->resetBranchesAndCache();
    $this->updateBranches();
    $this->processApiParseQueue();
  }

  /**
   * Tests that comments and comment settings are working.
   */
  function testComments() {
    // Verify that with comments turned off, the comment form does not appear.
    $this->drupalGet('api/' . $this->branch_info['project'] . '/classes.php/class/Sample');
    $this->assertNoText(t('Add new comment'), 'Comment form is not there');
    $this->assertNoText(t('Comment'), 'Comment form is not there');
    $this->assertNoText(t('Subject'), 'Comment form is not there');
    $this->assertNoRaw(t('Save'), 'Comment form is not there');

    // Turn comments on. Verify this did not affect old API pages.
    $this->drupalPost('admin/config/development/api/comments', array(
        'comment' => 2,
      ), t('Save comment settings'));
    $this->assertText(t('Saved API comment settings'), 'Confirm message appears');
    $this->drupalGet('api/' . $this->branch_info['project'] . '/classes.php/class/Sample');
    $this->assertNoText(t('Add new comment'), 'Comment form is not there');
    $this->assertNoText(t('Comment'), 'Comment form is not there');
    $this->assertNoText(t('Subject'), 'Comment form is not there');
    $this->assertNoRaw(t('Save'), 'Comment form is not there');

    // Apply the settings to old pages, and post a comment.
    $this->drupalGet('admin/config/development/api/comments');
    $this->clickLink(t('Apply current default comment settings to existing API pages'));
    $this->assertText(t('Applied default comment settings to existing API pages'), 'Confirm message appears');
    $this->drupalGet('api/' . $this->branch_info['project'] . '/classes.php/class/Sample');
    $this->drupalPost(NULL, array(
        'subject' => 'Subject 1',
        'comment_body[und][0][value]' => 'Comment 1 body',
      ), t('Save'));
    $this->assertText(t('Your comment has been posted'), 'Confirm message appears');
    $this->assertLink('Subject 1', 0, 'Comment subject appears');
    $this->assertText('Comment 1 body', 'Comment body appears');
    $this->assertLink('reply', 0, 'Reply link appears');

    // Reparse the branch, and verify the comment is still there.
    $this->drupalGet('admin/config/development/api/branches');
    $this->clickLink('reparse');
    $this->assertText('reparse, starting at next cron run', 'Confirm message appears');
    $this->updateBranches();
    $count = $this->processApiParseQueue();
    $this->assertTrue($count > 5, 'Files were reparsed');
    $this->drupalGet('api/' . $this->branch_info['project'] . '/classes.php/class/Sample');
    $this->assertLink('Subject 1', 0, 'Comment subject appears');
    $this->assertText('Comment 1 body', 'Comment body appears');
    $this->assertLink('reply', 0, 'Reply link appears');

    // Set to closed (apply to all) and verify the comment form disapppears.
    $this->drupalPost('admin/config/development/api/comments', array(
        'comment' => 1,
      ), t('Save comment settings'));
    $this->assertText(t('Saved API comment settings'), 'Confirm message appears');
    $this->clickLink(t('Apply current default comment settings to existing API pages'));
    $this->assertText(t('Applied default comment settings to existing API pages'), 'Confirm message appears');
    $this->drupalGet('api/' . $this->branch_info['project'] . '/classes.php/class/Sample');
    $this->assertLink('Subject 1', 0, 'Comment subject appears');
    $this->assertText('Comment 1 body', 'Comment body appears');
    $this->assertNoLink('reply', 0, 'Reply link disappears');
    $this->assertNoText(t('Add new comment'), 'Comment form is not there');
    $this->assertNoRaw(t('Save'), 'Comment form is not there');

    // Set to hidden (apply to all) and verify comment disappears.
    $this->drupalPost('admin/config/development/api/comments', array(
        'comment' => 0,
      ), t('Save comment settings'));
    $this->assertText(t('Saved API comment settings'), 'Confirm message appears');
    $this->clickLink(t('Apply current default comment settings to existing API pages'));
    $this->assertText(t('Applied default comment settings to existing API pages'), 'Confirm message appears');
    $this->drupalGet('api/' . $this->branch_info['project'] . '/classes.php/class/Sample');
    $this->assertNoLink('Subject 1', 0, 'Comment subject disappears');
    $this->assertNoText('Comment 1 body', 'Comment body disappears');
    $this->assertNoLink('reply', 0, 'Reply link disappears');
    $this->assertNoText(t('Add new comment'), 'Comment form is not there');
    $this->assertNoText(t('Comment'), 'Comment form is not there');
    $this->assertNoText(t('Subject'), 'Comment form is not there');
    $this->assertNoRaw(t('Save'), 'Comment form is not there');
  }
}
